apply plugin: 'maven-publish'

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

def LIB_GROUP_ID = 'seohyun'
def LIB_ARTIFACT_ID = 'sample'
def LIB_VERSION = '0.0.2-alpha'

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        deploy(MavenPublication) {

            groupId LIB_GROUP_ID
            artifactId LIB_ARTIFACT_ID
            version LIB_VERSION
            artifact('build/outputs/aar/sample.aar')
            artifact(sourceJar)

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each { ModuleDependency md ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', md.group)
                    dependencyNode.appendNode('artifactId', md.name)
                    dependencyNode.appendNode('version', md.version)
                }
            }
        }
    }

    repositories {
        println("$githubProperties")
        maven {
            name = 'GithubPackages'
            url = uri("https://maven.pkg.github.com/seohyun99/package-test")
            credentials {
                username = githubProperties['github_username'] ?: System.getenv("github_username")
                password = githubProperties['github_access_token'] ?: System.getenv("github_access_token")
            }
        }
    }
}
//
//task cleanBuildPublishLocal(type: GradleBuild) {
//    tasks = ['clean', 'build', 'publishToMavenLocal']
//}
//
//task cleanBuildPublish(type: GradleBuild) {
//    tasks = ['clean', 'build', 'publish']
//}
